# ──────────────────────────────────────────────────────────────────────────
# 1. Базовый образ: лёгкий Python 3.10-slim
FROM python:3.10-slim

# ──────────────────────────────────────────────────────────────────────────
# 2. Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# ──────────────────────────────────────────────────────────────────────────
# 3. (Опционально) Устанавливаем dos2unix, чтобы автоматически
#    конвертировать CRLF → LF, если вдруг какие-то .py/.sh пришли
#    из Windows в неправильном формате. Если вы уверены, что
#    все файлы уже в LF, этот блок можно удалить.
RUN apt-get update \
 && apt-get install -y --no-install-recommends dos2unix \
 && rm -rf /var/lib/apt/lists/*

# ──────────────────────────────────────────────────────────────────────────
# 4. Копируем файл зависимостей и устанавливаем их
#    (в данном случае в requirements.txt должен быть хотя бы streamlit
#    и все библиотеки, которые нужны вашему приложению)
COPY requirements.txt /app/requirements.txt

# Если в requirements.txt присутствует строка с "pywin32==...", тогда её
# лучше отфильтровать, потому что в Linux-окружении эта библиотека не нужна:
RUN grep -vE '^pywin32==' /app/requirements.txt > /app/requirements_unix.txt \
 && pip install --no-cache-dir -r /app/requirements_unix.txt

# ──────────────────────────────────────────────────────────────────────────
# 5. Копируем «runtime-исходники» (то, что нужно для работы веб-приложения)
#    а) Модель, уже подготовленную Jenkins’ом и положенную в models/
#    b) Код самого Streamlit-приложения: utils/app.py
#    c) Вспомогательные модули: utils/model.py
COPY models/ /app/models/
COPY utils/   /app/utils/

# ──────────────────────────────────────────────────────────────────────────
# 6. Конвертируем все скрипты (.py, .sh) в LF-формат (на случай, если где-то
#    остались Windows-концы строк). Если вы уверены, что у вас нигде нет CRLF,
#    этот шаг можно опустить.
RUN find /app -type f \( -name "*.py" -o -name "*.sh" \) -exec dos2unix {} \; || true

# ──────────────────────────────────────────────────────────────────────────
# 7. Пробрасываем порт, на котором Streamlit по умолчанию будет слушать (8501)
EXPOSE 8501

# ──────────────────────────────────────────────────────────────────────────
# 8. Указываем команду «streamlit run», чтобы при старте контейнера
#    сразу запускалось ваше приложение.
#
#    Предполагаем, что точка входа – в файле utils/app.py
ENTRYPOINT ["streamlit", "run", "utils/app.py", "--server.port=8501", "--server.address=0.0.0.0"]
